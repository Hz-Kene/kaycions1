# Generated by Django 3.2.8 on 2022-01-07 14:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('terms_confirmed', models.BooleanField(default=True)),
                ('email', models.EmailField(help_text='Email', max_length=40, null=True, unique=True)),
                ('full_name', models.CharField(help_text='Full name', max_length=40, null=True)),
                ('facebook_id', models.CharField(help_text='Facebook ID', max_length=30, null=True, unique=True)),
                ('twitter_id', models.CharField(help_text='Twitter ID', max_length=30, null=True, unique=True)),
                ('instagram_id', models.CharField(help_text='Instagram ID', max_length=30, null=True, unique=True)),
                ('youtube_id', models.CharField(help_text='Youtube ID', max_length=40, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=200, null=True)),
                ('message', models.TextField(max_length=2000, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suscribers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Full name', max_length=40, null=True)),
                ('email', models.EmailField(help_text='Email', max_length=40, null=True, unique=True)),
                ('facebook_id', models.CharField(help_text='Facebook ID', max_length=30, null=True, unique=True)),
                ('twitter_id', models.CharField(help_text='Twitter ID', max_length=30, null=True, unique=True)),
                ('instagram_id', models.CharField(help_text='Instagram ID', max_length=30, null=True, unique=True)),
                ('youtube_id', models.EmailField(help_text='Youtube ID', max_length=40, null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, default='pro.png', null=True, upload_to='avatars')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Facebook', 'Facebook'), ('Twitter', 'Twitter'), ('Instagram', 'Instagram'), ('Youtube', 'Youtube')], max_length=200, null=True)),
                ('category_2', models.CharField(choices=[('Like', 'Like'), ('Share', 'Share'), ('Comment', 'Comment'), ('Mention', 'Mention'), ('Follow', 'Follow'), ('Repost', 'Repost'), ('Hastag', 'Hashtag'), ('Watch', 'Watch'), ('Re-tweet', 'Re-tweet'), ('Suscribe', 'Suscribe'), ('Like and Comment', 'Like and Comment'), ('Like, Comment and Share', 'Like, Comment and Share')], max_length=200, null=True)),
                ('description', models.TextField(max_length=300, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('link', models.URLField(max_length=500, null=True)),
                ('task_expiry_date', models.DateField(default='Jan-07-2022', null=True)),
                ('task_expiry_time', models.TimeField(default='02-38-28', null=True)),
                ('pending', models.BooleanField(blank=True, default=False, null=True)),
                ('completed', models.BooleanField(blank=True, default=False, null=True)),
                ('worker', models.ManyToManyField(to='task.Worker')),
            ],
        ),
    ]
