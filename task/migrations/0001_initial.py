# Generated by Django 3.2.8 on 2022-02-13 23:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import task.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('terms_confirmed', models.BooleanField(default=True)),
                ('email', models.EmailField(help_text='Email', max_length=40, null=True, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(help_text='Full name', max_length=40, null=True)),
                ('is_email_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('referral_code', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('text', models.TextField(blank=True, max_length=8000, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=30, null=True)),
                ('whatsapp_link', models.URLField(blank=True, max_length=300, null=True)),
                ('address', models.TextField(blank=True, max_length=400, null=True)),
                ('facebook', models.CharField(blank=True, max_length=700, null=True)),
                ('facebook_link', models.URLField(blank=True, max_length=700, null=True)),
                ('twitter', models.CharField(blank=True, max_length=700, null=True)),
                ('twitter_link', models.URLField(blank=True, max_length=700, null=True)),
                ('instagram', models.CharField(blank=True, max_length=700, null=True)),
                ('instagram_link', models.URLField(blank=True, max_length=700, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=700, null=True)),
                ('linkedin_link', models.URLField(blank=True, max_length=700, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=200, null=True)),
                ('message', models.TextField(max_length=2000, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Earnings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pending_earnings', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=7, null=True)),
                ('verified_earnings', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=7, null=True)),
                ('disapproved_earnings', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=7, null=True)),
                ('withdrawn_earnings', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=7, null=True)),
                ('paid_earnings', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=7, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Faqs_Terms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faqs_title', models.CharField(blank=True, max_length=100, null=True)),
                ('terms_title', models.CharField(blank=True, max_length=100, null=True)),
                ('faqs_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('terms_text', models.TextField(blank=True, max_length=5000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suscribers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=200, null=True, unique=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Facebook', 'Facebook'), ('Twitter', 'Twitter'), ('Instagram', 'Instagram'), ('Youtube', 'Youtube')], max_length=200, null=True)),
                ('category_2', models.CharField(choices=[('Like', 'Like'), ('Share', 'Share'), ('Comment', 'Comment'), ('Mention', 'Mention'), ('Follow', 'Follow'), ('Repost', 'Repost'), ('Hastag', 'Hashtag'), ('Watch', 'Watch'), ('Re-tweet', 'Re-tweet'), ('Suscribe', 'Suscribe'), ('Like & Comment', 'Like & Comment')], max_length=200, null=True)),
                ('description', models.TextField(max_length=300, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('link', models.URLField(max_length=500, null=True)),
                ('task_expiry_date', models.DateField(default=task.models.f, null=True)),
                ('task_expiry_time', models.TimeField(default=django.utils.timezone.now, null=True)),
                ('who_updated', models.CharField(blank=True, max_length=100, null=True)),
                ('clicked', models.IntegerField(blank=True, default='0', editable=False, null=True)),
                ('unique_code', models.CharField(blank=True, editable=False, max_length=30, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Full name', max_length=40, null=True)),
                ('email', models.EmailField(help_text='Email', max_length=40, null=True, unique=True)),
                ('facebook_id', models.CharField(help_text='Facebook ID', max_length=30, null=True, unique=True)),
                ('twitter_id', models.CharField(help_text='Twitter ID', max_length=30, null=True, unique=True)),
                ('instagram_id', models.CharField(help_text='Instagram ID', max_length=30, null=True, unique=True)),
                ('youtube_id', models.EmailField(help_text='Youtube ID', max_length=40, null=True, unique=True)),
                ('paypal_address', models.EmailField(help_text='Paypal Address', max_length=100, null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('code', models.CharField(blank=True, max_length=60)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('recommended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ref_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paypal_address', models.EmailField(blank=True, max_length=100, null=True)),
                ('amount_withdraw', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('verified', models.BooleanField(blank=True, default=False, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal', to='task.worker')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='TaskItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_performed', models.DateTimeField(auto_now_add=True)),
                ('pending', models.BooleanField(blank=True, default=True, null=True)),
                ('completed', models.BooleanField(blank=True, default=False, null=True)),
                ('disapproved', models.BooleanField(blank=True, default=False, null=True)),
                ('ignored', models.BooleanField(blank=True, default=False, null=True)),
                ('unique_code', models.CharField(blank=True, editable=False, max_length=30, null=True)),
                ('clicked', models.IntegerField(blank=True, default='0', editable=False, null=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taskitems', to='task.task')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taskitems', to='task.worker')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task.worker'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('worker_has_seen', models.BooleanField(default=False)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_to2', to='task.worker')),
                ('earning', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='task.earnings')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='task.taskitem')),
                ('to_worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_to', to='task.worker')),
                ('withdrawal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='task.withdrawal')),
            ],
        ),
        migrations.AddField(
            model_name='earnings',
            name='worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='task.worker'),
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=5000, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='task.worker')),
            ],
        ),
    ]
